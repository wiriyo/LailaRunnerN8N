{
  "name": "LaiLa_RunningCoach",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "LaiLaRunner",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        560,
        -160
      ],
      "id": "00d90127-b4d4-4ef3-8c75-e725aa4e0dd6",
      "name": "Webhook",
      "webhookId": "465b2d67-1fc4-447b-8f53-00a211206ca2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        2304,
        -160
      ],
      "id": "cb2f24da-82f7-4daa-a85b-4a86b6617396",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.events[0].message.type === 'text' ? $json.body.events[0].message.text : $json.content.parts[0].text }}",
        "options": {
          "systemMessage": "คุณคือ \"ไลลา\" AI Chatbot ที่ปรึกษาด้านการวิ่งที่เป็นเหมือนเพื่อนสาวที่แสนดีและอบอุ่นของ \"พี่ทะเล\"\n\n# กฏของคุณ:\n- คุณต้องเรียกผู้ใช้ว่า \"พี่ทะเล\" เสมอ\n- คุณต้องแทนตัวเองว่า \"ไลลา\" เสมอ\n- คุณต้องให้กำลังใจ เป็นกันเอง และใช้ภาษาที่เข้าใจง่าย\n- คุณมีความรู้ลึกซึ้งเรื่องการซ้อมวิ่งทุกระดับ, โภชนาการ, และการฟื้นฟูร่างกาย\n- คุณมีความสามารถในการออกแบบการซ้อมเพื่อให้บรรลุเป้าหมายที่กำหนดไว้เสมอ\n- คุณมีความสามารถในการอ่านผลและสรุปผลการซ้อม ที่ได้ออกแบบไว้ และวางแผนล่วงหน้าอย่างเหมาะสมเพื่อให้บรรลุเป้าหมาย\n- คุณต้องจัดรูปแบบคำตอบให้อ่านง่ายเสมอ \n\n- คุณต้องตอบคำถามโดยอิงจากบทบาทนี้เท่านั้น"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        1904,
        -160
      ],
      "id": "97f1b049-1787-454c-b5e0-25b9aa6da40e",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-flash-002",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1936,
        64
      ],
      "id": "1e563f1c-d991-42e1-b97e-78797b0831cb",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "wSvFCSYV2dmKLvme",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/reply",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer SWWo3+itsigWXmOS9ruS9uO69mqJpRf4u/+uPhGBpFY66uXW74mBpywHWCYlQDvv75U7wpS48SGBUOKmbOdBpZBvaX1MsaxBUxn0Zw6I24Rhzx/u+M2/rPKrjOCothttgfcHsme655TQUqfaISz+KQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"replyToken\": \"{{ $('Webhook').item.json.body.events[0].replyToken }}\",\n  \"messages\": [\n    {\n      \"type\": \"text\",\n      \"text\": \"{{ $node['Code1'].json.safeOutput }}\"\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2752,
        -160
      ],
      "id": "3c39a452-e966-429a-8598-e10ab891e684",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "jsCode": "// 1. รับข้อมูลทั้งหมดที่เข้ามา\nconst items = $input.all();\n\n// 2. ดึงเอาคำตอบของ AI ออกมา (จาก Node ก่อนหน้า)\nconst aiOutput = items[0].json.output;\n\n// 3. (สำคัญที่สุด!) แปลงข้อความให้เป็น JSON-safe string\n// JSON.stringify จะจัดการ \\n, \", \\ และตัวอักษรพิเศษอื่นๆ ให้เราอัตโนมัติ\nconst safeAiOutput = JSON.stringify(aiOutput);\n\n// 4. สร้างข้อมูลใหม่เพื่อส่งต่อ\n// เราจะเอาเครื่องหมายคำพูดคู่ \" \" หน้า-หลังที่ stringify สร้างเกินมาออกไป\nitems[0].json.safeOutput = safeAiOutput.slice(1, -1);\n\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2528,
        -160
      ],
      "id": "804e110e-cf28-4482-90dc-50b5a164ea53",
      "name": "Code1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f12ae960-427f-4995-892d-c369f8d8f4dd",
              "leftValue": "={{ $json.body.events[0].message.type }}",
              "rightValue": "=text",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        784,
        -160
      ],
      "id": "7f10ada6-2039-4c56-bb19-080b20f9a9c1",
      "name": "If"
    },
    {
      "parameters": {
        "url": "=https://api-data.line.me/v2/bot/message/{{ $json.body.events[0].message.id }}/content",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer SWWo3+itsigWXmOS9ruS9uO69mqJpRf4u/+uPhGBpFY66uXW74mBpywHWCYlQDvv75U7wpS48SGBUOKmbOdBpZBvaX1MsaxBUxn0Zw6I24Rhzx/u+M2/rPKrjOCothttgfcHsme655TQUqfaISz+KQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1008,
        -64
      ],
      "id": "6da813ae-f7a5-4902-95dc-3ea6b3842715",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.0-flash-lite",
          "mode": "list",
          "cachedResultName": "models/gemini-2.0-flash-lite"
        },
        "text": "อ่านข้อความทั้งหมดจากรูป หากรูปนั้นเป็นข้อมูลการกำลังกายให้ทำแปรข้อมูลเป็นภาษาอังกฤษ จากนั้นให้สกัดข้อมูลออกมาเป็น json และให้ตอบกลับเป็น   json เท่านั้น ห้ามมีคำอธิบายหรือข้อความอื่นนอกเหนือจาก JSON object  แต่หากรูปนั้นไม่ใช่รูปข้อมูลการการออกกำลังกายให้เขียนบรรยายรูปและอ่านข้อความทั้งหมดบนรูป",
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        1232,
        -64
      ],
      "id": "0614cd88-d408-48a1-9c2e-35f803dd636f",
      "name": "Analyze image",
      "credentials": {
        "googlePalmApi": {
          "id": "wSvFCSYV2dmKLvme",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.userId}}",
        "tableName": "chat_memory",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        2064,
        64
      ],
      "id": "a620d51f-bb3a-4b89-bf50-4bd0f68c8ef4",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "HXvF9cbj6qYjbiTG",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9b0f74d3-fcdb-4529-b9f8-5b790b2baefd",
              "name": "body.events[0].message.type",
              "value": "={{ $('Webhook').item.json.body.events[0].message.type }}",
              "type": "string"
            },
            {
              "id": "e7dd89d0-da69-42ad-aeae-9398bc85b1ab",
              "name": "userId",
              "value": "={{ $('Webhook').item.json.body.events[0].source.userId }}",
              "type": "string"
            },
            {
              "id": "64577b24-6eda-4489-95b9-1eebb9086cec",
              "name": "content.parts[0].text",
              "value": "={{ $json.content.parts[0].text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1456,
        -64
      ],
      "id": "f80af8d0-61a4-4880-81f5-e4abb8d7c29a",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "56593e22-a75e-4b11-900d-655425ee53cd",
              "name": "body.events[0].message.type",
              "value": "={{ $json.body.events[0].message.type }}",
              "type": "string"
            },
            {
              "id": "1e226172-9c29-4281-92f2-4ed7849a8924",
              "name": "userId",
              "value": "={{ $json.body.events[0].source.userId }}",
              "type": "string"
            },
            {
              "id": "2f2619c2-f493-4824-ad78-ae593354e1aa",
              "name": "body.events[0].message.text",
              "value": "={{ $json.body.events[0].message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1680,
        -256
      ],
      "id": "8b14db60-832b-44bd-bf6c-5ffb5c7bc639",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1N-HfOIMD2RcpXVK4xe7p4Pdql5iA1fnAnEvrNDsyX-A",
          "mode": "list",
          "cachedResultName": "RunningRecord",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1N-HfOIMD2RcpXVK4xe7p4Pdql5iA1fnAnEvrNDsyX-A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 864535905,
          "mode": "list",
          "cachedResultName": "data",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1N-HfOIMD2RcpXVK4xe7p4Pdql5iA1fnAnEvrNDsyX-A/edit#gid=864535905"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Timestamp": "={{ $now.toFormat('dd-MM-') }}{{ $now.year + 543 }}",
            "Duration": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('duration')).slice(14).match(/\\d{1,2}:\\d{1,2}'\\d{1,2}/)[0]}}",
            "Distance_km": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('distance')).split(':')[1].match(/\\d{1,}.\\d{1,}/)[0] }}",
            "Avg_Pace": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('avg_pace')).split(':')[1].match(/\\d{1,}.\\d{1,}/)[0] }}",
            "Elevation_Gain_m": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('ascent')).split(':')[1].match(/\\d{1,3}/)[0]}}",
            "Elevation_Loss_m": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('descent')).split(':')[1].match(/\\d{1,3}/)[0]}}",
            "Calories": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('calorie')).split(':')[1].match(/\\d{1,9}/)[0]}}",
            "Avg_HR": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('avg_heart')).split(':')[1].match(/\\d{1,}.\\d{1,}/)[0]}}",
            "Max_HR": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('max_heart')).split(':')[1].match(/\\d{1,}.\\d{1,}/)[0]}}",
            "VO2_Max": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('vo2_max')).split(':')[1].match(/\\d{1,}.\\d{1,}/)[0]}}",
            "Avg_Speed_kph": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('avg_speed')).split(':')[1].match(/\\d{1,}.\\d{1,}/)[0]}}",
            "Fastest_Pace": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('fastest_pace')).split(':')[1].match(/\\d{1,}.\\d{1,}/)[0] }}",
            "Max_Speed_kph": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('max_speed')).split(':')[1].match(/\\d{1,}.\\d{1,}/)[0] }}",
            "Steps": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('steps')).split(':')[1].match(/\\d{1,}.\\d{1,}/)[0] }}",
            "Stride_Length_Avg": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('stride_length')).split(':')[1].match(/\\d{1,}/)[0] }}",
            "Cadence_Avg": "={{ $json.content.parts[0].text.split('\\n').filter(line => line.toLowerCase().includes('cadence'))[1].match(/\\d{1,}/)[0]}}",
            "Cadence_Max": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('max_cadence')).split(':')[1].match(/\\d{1,}/)[0] }}",
            "TSS": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('tss')).split(':')[1].match(/\\d{1,}/)[0] }}",
            "Recovery_Time": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('recovery_time')).split(':')[1].match(/\\d{1,}/)[0] }}",
            "Time_Zone5": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('zone_5')).split(':')[1].match(/\\d{1,}/)[0] }}",
            "Time_Zone4": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('zone_4')).split(':')[1].match(/\\d{1,}/)[0] }}",
            "Time_Zone3": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('zone_3')).split(':')[1].match(/\\d{1,}/)[0] }}",
            "Time_Zone2": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('zone_2')).split(':')[1].match(/\\d{1,}/)[0] }}",
            "Time_Zone1": "={{ $json.content.parts[0].text.split('\\n').find(line => line.toLowerCase().includes('zone_1')).split(':')[1].match(/\\d{1,}/)[0] }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Timestamp",
              "displayName": "Timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Duration",
              "displayName": "Duration",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Distance_km",
              "displayName": "Distance_km",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Avg_Pace",
              "displayName": "Avg_Pace",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Fastest_Pace",
              "displayName": "Fastest_Pace",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Elevation_Gain_m",
              "displayName": "Elevation_Gain_m",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Elevation_Loss_m",
              "displayName": "Elevation_Loss_m",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Calories",
              "displayName": "Calories",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Avg_HR",
              "displayName": "Avg_HR",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Max_HR",
              "displayName": "Max_HR",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "VO2_Max",
              "displayName": "VO2_Max",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Avg_Speed_kph",
              "displayName": "Avg_Speed_kph",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Max_Speed_kph",
              "displayName": "Max_Speed_kph",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Steps",
              "displayName": "Steps",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Stride_Length_Avg",
              "displayName": "Stride_Length_Avg",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Cadence_Avg",
              "displayName": "Cadence_Avg",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Cadence_Max",
              "displayName": "Cadence_Max",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "TSS",
              "displayName": "TSS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Recovery_Time",
              "displayName": "Recovery_Time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Time_Zone5",
              "displayName": "Time_Zone5",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Time_Zone4",
              "displayName": "Time_Zone4",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Time_Zone3",
              "displayName": "Time_Zone3",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Time_Zone2",
              "displayName": "Time_Zone2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Time_Zone1",
              "displayName": "Time_Zone1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Note",
              "displayName": "Note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1472,
        128
      ],
      "id": "891b27ff-5896-4e6a-bb1d-d9e1bf245db4",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "OsZYWo0EHpNznyio",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Analyze image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          },
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet": {
      "main": [
        []
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Bangkok",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "cc931d62-cc74-45b3-9f96-d2c243f1671a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "1267e40b6b623a9ba41a51e0c803d24bb13b5a284e0cd82f774a80bded5ac77f"
  },
  "id": "dH3lSLnMt6RnNFXh",
  "tags": []
}